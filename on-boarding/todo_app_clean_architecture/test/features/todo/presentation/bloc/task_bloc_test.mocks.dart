// Mocks generated by Mockito 5.4.2 from annotations
// in todo_app_clean_architecture/test/features/todo/presentation/bloc/task_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_app_clean_architecture/core/error/failures.dart' as _i6;
import 'package:todo_app_clean_architecture/core/presentation/util/input_converter.dart'
    as _i3;
import 'package:todo_app_clean_architecture/core/usecases/usecase.dart' as _i8;
import 'package:todo_app_clean_architecture/features/todo/domain/entities/task.dart'
    as _i7;
import 'package:todo_app_clean_architecture/features/todo/domain/usecases/create_task.dart'
    as _i10;
import 'package:todo_app_clean_architecture/features/todo/domain/usecases/delete_task.dart'
    as _i12;
import 'package:todo_app_clean_architecture/features/todo/domain/usecases/get_all_tasks.dart'
    as _i4;
import 'package:todo_app_clean_architecture/features/todo/domain/usecases/get_task.dart'
    as _i9;
import 'package:todo_app_clean_architecture/features/todo/domain/usecases/update_task.dart'
    as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [InputConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockInputConverter extends _i1.Mock implements _i3.InputConverter {
  MockInputConverter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String dateTimeToString(DateTime? datetime) => (super.noSuchMethod(
        Invocation.method(
          #dateTimeToString,
          [datetime],
        ),
        returnValue: '',
      ) as String);
  @override
  _i2.Either<_i3.InvalidInputFailure, DateTime> stringToDateTime(String? str) =>
      (super.noSuchMethod(
        Invocation.method(
          #stringToDateTime,
          [str],
        ),
        returnValue: _FakeEither_0<_i3.InvalidInputFailure, DateTime>(
          this,
          Invocation.method(
            #stringToDateTime,
            [str],
          ),
        ),
      ) as _i2.Either<_i3.InvalidInputFailure, DateTime>);
}

/// A class which mocks [GetAllTasks].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllTasks extends _i1.Mock implements _i4.GetAllTasks {
  MockGetAllTasks() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.Either<_i6.Failure, List<_i7.Task>>> call(
          _i8.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i5.Stream<_i2.Either<_i6.Failure, List<_i7.Task>>>.empty(),
      ) as _i5.Stream<_i2.Either<_i6.Failure, List<_i7.Task>>>);
}

/// A class which mocks [GetTask].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTask extends _i1.Mock implements _i9.GetTask {
  MockGetTask() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>> call(
          _i9.GetTaskParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>>.empty(),
      ) as _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>>);
}

/// A class which mocks [CreateTask].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateTask extends _i1.Mock implements _i10.CreateTask {
  MockCreateTask() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>> call(
          _i10.CreateParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>>.empty(),
      ) as _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>>);
}

/// A class which mocks [UpdateTask].
///
/// See the documentation for Mockito's code generation for more information.
class MockUpdateTask extends _i1.Mock implements _i11.UpdateTask {
  MockUpdateTask() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>> call(
          _i11.UpdateParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>>.empty(),
      ) as _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>>);
}

/// A class which mocks [DeleteTask].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeleteTask extends _i1.Mock implements _i12.DeleteTask {
  MockDeleteTask() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>> call(
          _i12.DeleteParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>>.empty(),
      ) as _i5.Stream<_i2.Either<_i6.Failure, _i7.Task>>);
}
